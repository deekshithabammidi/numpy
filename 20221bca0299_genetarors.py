# -*- coding: utf-8 -*-
"""20221bca0299_genetarors.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L9mZmdUc8Q_Bm2CI_zsyzjNu47Xj-vSQ
"""



L = [54, 22, 35]
it = iter(L)
it

next(it)

it.__next__()

next(it)

next(it)

bafor i in iter(L):
  print(i)

for i in L:
  print(i)

L = [1, 2, 3]
iterator = iter(L)
t = tuple(iterator)
t

L = [1, 2, 3]
iterator = iter(L)
a, b = iterator
a, b

m = {'Jan': 1, 'Feb': 2, 'Mar': 3, 'Apr': 4, 'May': 5, 'Jun': 6, 'Jul': 7, 'Aug': 8, 'Sep': 9, 'Oct': 10, 'Nov': 11, 'Dec': 12}m = {'Jan': 1, 'Feb': 2, 'Mar': 3, 'Apr': 4, 'May': 5, 'Jun': 6, 'Jul': 7, 'Aug': 8, 'Sep': 9, 'Oct': 10, 'Nov': 11, 'Dec': 12}
for key in m:
  print(key, m[key])

l=[1,2,3]
[2*i for i in l]

l=[1,2,3]
for i in l:
  x=2*i
  print(x)

[2*i for i in l]

L = [('Italy', 'Rome'), ('France', 'Paris'), ('US', 'Washington DC')]
dict(iter(L))

line_list = ['  Presidency University\n', ' Computer Science Department\n', ' Dept Of CSE \n', '  \n']

# Generator expression -- returns iterator
stripped_iter = (line.strip() for line in line_list)

# List comprehension -- returns list
stripped_list = [line.strip() for line in line_list]
print(stripped_list)

#You can select only certain elements by adding an "if" condition:
stripped_list = [line.strip() for line in line_list]
print(stripped_list)

seq1 = 'abc'
seq2 = (1, 2, 3)
[(x, y) for x in seq1 for y in seq2]

def generate_ints(N):
  for i in range(N):
    yield i


gen=generate_ints(8)
next(gen)

next(gen)

next(gen)

next(gen)

next(gen)

def counter(maximum):
    i = 0
    while i < maximum:
        val = (yield i)
        # If value provided, change counter
        if val is not None:
            i = val
        else:
            i += 1



it = counter(10)
next(it)

any([0, 1, 0])

all([0, 1, 0])

zip(['a','b','c'], (1, 2, 3))

zip(['a', 'b'], (1, 2, 3))